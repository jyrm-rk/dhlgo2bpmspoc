apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/session-cookie-max-age: "3600"
    nginx.ingress.kubernetes.io/session-cookie-name: mydemomwsroute
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  creationTimestamp: "2023-08-17T10:44:46Z"
  generation: 1
  managedFields:
  - apiVersion: networking.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:cert-manager.io/cluster-issuer: {}
          f:nginx.ingress.kubernetes.io/affinity: {}
          f:nginx.ingress.kubernetes.io/backend-protocol: {}
          f:nginx.ingress.kubernetes.io/session-cookie-max-age: {}
          f:nginx.ingress.kubernetes.io/session-cookie-name: {}
          f:nginx.ingress.kubernetes.io/ssl-redirect: {}
      f:spec:
        f:ingressClassName: {}
        f:rules: {}
        f:tls: {}
    manager: rancher
    operation: Update
    time: "2023-08-17T10:44:46Z"
  - apiVersion: networking.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:loadBalancer:
          f:ingress: {}
    manager: nginx-ingress-controller
    operation: Update
    subresource: status
    time: "2023-08-17T10:45:07Z"
  name: dhl-go2-jenkins
  namespace: dhl-go2-bpms
  resourceVersion: "558437974"
  uid: 7dd49640-95e8-48af-a260-cbf90ad52735
spec:
  ingressClassName: nginx
  rules:
  - host: dhl-go2-jenkins-144fd7c1.nip.io
    http:
      paths:
      - backend:
          service:
            name: dhl-go2-jenkins
            port:
              number: 8080
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - dhl-go2-mws-demo-144fd7c1.nip.io
    secretName: tls-mws-demo-staging
status:
  loadBalancer:
    ingress:
    - ip: 20.79.215.193
